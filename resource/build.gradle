apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

//def getAppName() {
//  return new String(APP_NAME.getBytes("UTF-8"), "UTF-8")
//}

android {

  signingConfigs {
    sign {
      storeFile file("$rootDir/$STORE_FILE")
      storePassword STORE_PSW
      keyAlias = KEY_ALIAS
      keyPassword KEY_PSW

      v1SigningEnabled = true
      v2SigningEnabled = true
    }
    debug {
      storeFile file("$rootDir/$STORE_FILE")
      storePassword STORE_PSW
      keyAlias = KEY_ALIAS
      keyPassword KEY_PSW
      v1SigningEnabled = true
      v2SigningEnabled = true
    }
  }

  compileSdkVersion COMPILE_SDK_VERSION.toInteger()
  buildToolsVersion SUPPORT_SDK_VERSION

  defaultConfig {
    minSdkVersion MIN_SDK_VERSION.toInteger()
    targetSdkVersion TARGET_SDK_VERSION.toInteger()
    versionCode 1
    versionName "1.0"

    buildConfigField('String', 'WECHAT_APPID', "\"${WECHAT_APPID}\"")
    buildConfigField('String', 'WECHAT_APPSECRET', "\"${WECHAT_APPSECRET}\"")
    buildConfigField('String','ENDPOINT',"\"${ENDPOINT}\"")
    buildConfigField('String','ACCESSKEY_ID',"\"${ACCESSKEY_ID}\"")
    buildConfigField('String','ACCESSKEY_SECRET',"\"${ACCESSKEY_SECRET}\"")
    buildConfigField('String','BUCKET',"\"${BUCKET}\"")
    buildConfigField('String','PUSH_APPKEY',"\"${PUSH_APPKEY}\"")

    resValue("string", "appName", "梵记")

    consumerProguardFiles 'consumer-rules.pro'
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }

  compileOptions {
    sourceCompatibility = JAVA_VERSION
    targetCompatibility = JAVA_VERSION
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  api project(':base')
  api project(':files')
//  api project(':web')

  api 'com.aliyun.dpa:oss-android-sdk:+'
  implementation 'com.github.promeg:tinypinyin:2.0.3'
//  implementation 'androidx.slidingpanelayout:slidingpanelayout:1.0.0' //the temp

//  api "com.github.xinyuez:easypermissions:2.0.1"

//  api 'com.tbruyelle.rxpermissions:rxpermissions:0.7.0@aar'
//  api 'io.reactivex:rxjava:1.1.3'

  api 'com.permissionx.guolindev:permissionx:1.3.0'

  api 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'

  api project(':jpush')

  api 'io.jsonwebtoken:jjwt-api:0.11.1'
  runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.1'
  runtimeOnly('io.jsonwebtoken:jjwt-orgjson:0.11.1') {
    exclude group: 'org.json', module: 'json' //provided by Android natively
  }

//  implementation 'com.nineoldandroids:library:2.4.0'

//  api 'com.rockerhieu.emojicon:library:1.3.1'

//  api "com.github.skydoves:colorpickerview:2.1.6"

  // 单独添加核心 module Transferee, 之后至少还需要添加以下三种图片加载器中的一种
//  api 'com.github.Hitomis.transferee:Transferee:1.5.0'

  // 添加 Glide 图片加载器
//  api 'com.github.Hitomis.transferee:GlideImageLoader:1.5.0'

}
